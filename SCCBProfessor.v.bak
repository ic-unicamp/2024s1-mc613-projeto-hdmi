module SCCBProfessor(
	input clk,
	input reset,
	input wren,
	output sio_c,
	output reg sio_d
);

reg [28:0] saida; 
reg [4:0] index;

reg [1:0] state;
reg sio_clk_ctl;
wire sio_clk;

reg [9:0] counter;

always @(posedge sio_clk) counter = counter + 1; 
assign sio_clk = counter[9];	
	
assign sio_c = (sio_clk_ctl) ? sio_clk : 1'b1;

initial begin
	saida = 29'b10_001010100_000100100_000001010;
end

always @(posedge sio_clk) begin
	if(reset) begin
		sio_d = 1;
		sio_clk_ctl = 0;
	end else begin
		case(state)
			0:begin
				index = 28;
				sio_d = saida[index];
				if(wren) begin
					state = 1;
					sio_clk_ctl = 1;
				end
			end
			1: begin
				index = index - 1;
				sio_d = saida[index];
				if(index == 0) begin
					state = 0;
					sio_clk_ctl = 0;
				end
			end
		endcase
	end
end

endmodule